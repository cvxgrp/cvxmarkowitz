:py:mod:`markowitz`
===================

.. py:module:: markowitz


Subpackages
-----------
.. toctree::
   :titlesonly:
   :maxdepth: 3

   models/index.rst
   risk/index.rst


Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   bounds/index.rst
   builder/index.rst
   model/index.rst


Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   markowitz.Model




.. py:class:: Model

   Bases: :py:obj:`abc.ABC`

   Abstract risk model

   .. py:attribute:: assets
      :annotation: :int

      

   .. py:attribute:: parameter
      :annotation: :Dict[str, cvxpy.Parameter]

      

   .. py:attribute:: data
      :annotation: :Dict[str, cvxpy.Parameter]

      

   .. py:method:: estimate(self, variables: Dict[str, cvxpy.Variable])
      :abstractmethod:

      Estimate the variance given the portfolio weights


   .. py:method:: update(self, **kwargs)
      :abstractmethod:

      Update the data in the risk model


   .. py:method:: constraints(self, variables: Dict[str, cvxpy.Variable])

      Return the constraints for the risk model



