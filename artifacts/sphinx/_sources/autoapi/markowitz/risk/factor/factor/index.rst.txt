:py:mod:`markowitz.risk.factor.factor`
======================================

.. py:module:: markowitz.risk.factor.factor

.. autoapi-nested-parse::

   Factor risk model



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   markowitz.risk.factor.factor.FactorModel




.. py:class:: FactorModel

   Bases: :py:obj:`cvx.markowitz.model.Model`

   Factor risk model

   .. py:attribute:: factors
      :annotation: :int = 0

      

   .. py:method:: __post_init__(self) -> None


   .. py:method:: estimate(self, variables: cvx.markowitz.types.Variables) -> cvxpy.Expression

      Compute the total variance


   .. py:method:: _residual_risk(self, variables: cvx.markowitz.types.Variables) -> cvxpy.Expression


   .. py:method:: _systematic_risk(self, variables: cvx.markowitz.types.Variables) -> cvxpy.Expression


   .. py:method:: update(self, **kwargs: cvx.markowitz.types.Matrix) -> None

      Update the data in the risk model


   .. py:method:: constraints(self, variables: cvx.markowitz.types.Variables) -> cvx.markowitz.types.Expressions

      Return the constraints for the risk model



